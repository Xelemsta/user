// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// UserListHandlerFunc turns a function with the right signature into a user list handler
type UserListHandlerFunc func(UserListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UserListHandlerFunc) Handle(params UserListParams) middleware.Responder {
	return fn(params)
}

// UserListHandler interface for that can handle valid user list params
type UserListHandler interface {
	Handle(UserListParams) middleware.Responder
}

// NewUserList creates a new http.Handler for the user list operation
func NewUserList(ctx *middleware.Context, handler UserListHandler) *UserList {
	return &UserList{Context: ctx, Handler: handler}
}

/*
	UserList swagger:route GET /v1/user user userList

get a list of user
*/
type UserList struct {
	Context *middleware.Context
	Handler UserListHandler
}

func (o *UserList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUserListParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
