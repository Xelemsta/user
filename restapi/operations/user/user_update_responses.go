// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"user/models"
)

// UserUpdateOKCode is the HTTP code returned for type UserUpdateOK
const UserUpdateOKCode int = 200

/*
UserUpdateOK Updated successfully

swagger:response userUpdateOK
*/
type UserUpdateOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewUserUpdateOK creates UserUpdateOK with default headers values
func NewUserUpdateOK() *UserUpdateOK {

	return &UserUpdateOK{}
}

// WithPayload adds the payload to the user update o k response
func (o *UserUpdateOK) WithPayload(payload *models.User) *UserUpdateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user update o k response
func (o *UserUpdateOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserUpdateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UserUpdateDefault Error handling the request

swagger:response userUpdateDefault
*/
type UserUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUserUpdateDefault creates UserUpdateDefault with default headers values
func NewUserUpdateDefault(code int) *UserUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &UserUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the user update default response
func (o *UserUpdateDefault) WithStatusCode(code int) *UserUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the user update default response
func (o *UserUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the user update default response
func (o *UserUpdateDefault) WithPayload(payload *models.Error) *UserUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user update default response
func (o *UserUpdateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
